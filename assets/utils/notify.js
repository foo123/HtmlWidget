/*
* Author: Alex Gibson
* https://github.com/alexgibson/notify.js
* License: MIT license
*/
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports):"function"==typeof define&&define.amd?define(["exports"],i):i(t.Notify=t.Notify||{})}(this,function(t){"use strict";function i(t){return"function"==typeof t}function o(t){var o=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];if("string"!=typeof t)throw new Error("Notify(): first arg (title) must be a string.");if("object"!=typeof o)throw new Error("Notify(): second arg (options) must be an object.");var n=o.notifyShow,s=void 0===n?null:n,r=o.notifyClose,c=void 0===r?null:r,l=o.notifyClick,a=void 0===l?null:l,h=o.notifyError,f=void 0===h?null:h,y=o.closeOnClick,u=void 0===y?!1:y,d=o.timeout,p=void 0===d?null:d,m=e(o,["notifyShow","notifyClose","notifyClick","notifyError","closeOnClick","timeout"]);this.title=t,this.options=m,this.permission=null,this.closeOnClick=u,this.timeout=p,i(s)&&(this.onShowCallback=s),i(c)&&(this.onCloseCallback=c),i(a)&&(this.onClickCallback=a),i(f)&&(this.onErrorCallback=f)}var e=function(t,i){var o={};for(var e in t)i.indexOf(e)>=0||Object.prototype.hasOwnProperty.call(t,e)&&(o[e]=t[e]);return o},n=window.Notification;o.isSupported=function(t){if(!n||!n.requestPermission)return!1;if("granted"===t||"granted"===n.permission)throw new Error("You must only call this before calling Notification.requestPermission(), otherwise this feature detect would trigger an actual notification!");try{new n("")}catch(i){if("TypeError"===i.name)return!1}return!0},o.needsPermission=!n||!n.permission||"granted"!==n.permission,o.requestPermission=function(t,e){n.requestPermission(function(n){switch(n){case"granted":o.needsPermission=!1,i(t)&&t();break;case"denied":o.needsPermission=!0,i(e)&&e()}})},o.prototype.show=function(){this.myNotify=new n(this.title,this.options),this.options.requireInteraction||!this.timeout||isNaN(this.timeout)||setTimeout(this.close.bind(this),1e3*this.timeout),this.myNotify.addEventListener("show",this,!1),this.myNotify.addEventListener("error",this,!1),this.myNotify.addEventListener("close",this,!1),this.myNotify.addEventListener("click",this,!1)},o.prototype.onShowNotification=function(t){this.onShowCallback&&this.onShowCallback(t)},o.prototype.onCloseNotification=function(t){this.onCloseCallback&&this.onCloseCallback(t),this.destroy()},o.prototype.onClickNotification=function(t){this.onClickCallback&&this.onClickCallback(t),this.closeOnClick&&this.close()},o.prototype.onErrorNotification=function(t){this.onErrorCallback&&this.onErrorCallback(t),this.destroy()},o.prototype.destroy=function(){this.myNotify.removeEventListener("show",this,!1),this.myNotify.removeEventListener("error",this,!1),this.myNotify.removeEventListener("close",this,!1),this.myNotify.removeEventListener("click",this,!1)},o.prototype.close=function(){this.myNotify.close()},o.prototype.handleEvent=function(t){switch(t.type){case"show":this.onShowNotification(t);break;case"close":this.onCloseNotification(t);break;case"click":this.onClickNotification(t);break;case"error":this.onErrorNotification(t)}},t["default"]=o});